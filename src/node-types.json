[
  {
    "type": "bytearray",
    "named": true,
    "fields": {}
  },
  {
    "type": "bytechar",
    "named": true,
    "fields": {}
  },
  {
    "type": "char",
    "named": true,
    "fields": {}
  },
  {
    "type": "cond_directive",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "else_directive",
          "named": true
        },
        {
          "type": "endif_directive",
          "named": true
        },
        {
          "type": "if_directive",
          "named": true
        }
      ]
    }
  },
  {
    "type": "identifier",
    "named": true,
    "fields": {}
  },
  {
    "type": "if_directive",
    "named": true,
    "fields": {}
  },
  {
    "type": "keyword",
    "named": true,
    "fields": {}
  },
  {
    "type": "string",
    "named": true,
    "fields": {}
  },
  {
    "type": "test",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "bytearray",
          "named": true
        },
        {
          "type": "bytechar",
          "named": true
        },
        {
          "type": "char",
          "named": true
        },
        {
          "type": "comment",
          "named": true
        },
        {
          "type": "cond_directive",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "keyword",
          "named": true
        },
        {
          "type": "string",
          "named": true
        },
        {
          "type": "triple_quoted_string",
          "named": true
        },
        {
          "type": "verbatim_bytearray",
          "named": true
        },
        {
          "type": "verbatim_string",
          "named": true
        }
      ]
    }
  },
  {
    "type": "triple_quoted_string",
    "named": true,
    "fields": {}
  },
  {
    "type": "verbatim_bytearray",
    "named": true,
    "fields": {}
  },
  {
    "type": "verbatim_string",
    "named": true,
    "fields": {}
  },
  {
    "type": "",
    "named": false
  },
  {
    "type": "\n",
    "named": false
  },
  {
    "type": "\r\n",
    "named": false
  },
  {
    "type": " ",
    "named": false
  },
  {
    "type": "!",
    "named": false
  },
  {
    "type": "\"",
    "named": false
  },
  {
    "type": "\"\"\"",
    "named": false
  },
  {
    "type": "\"B",
    "named": false
  },
  {
    "type": "#if",
    "named": false
  },
  {
    "type": "&&",
    "named": false
  },
  {
    "type": "'",
    "named": false
  },
  {
    "type": "'B",
    "named": false
  },
  {
    "type": "(",
    "named": false
  },
  {
    "type": "(*",
    "named": false
  },
  {
    "type": ")",
    "named": false
  },
  {
    "type": "*)",
    "named": false
  },
  {
    "type": "//",
    "named": false
  },
  {
    "type": "@\"",
    "named": false
  },
  {
    "type": "\\",
    "named": false
  },
  {
    "type": "\\U",
    "named": false
  },
  {
    "type": "\\u",
    "named": false
  },
  {
    "type": "abstract",
    "named": false
  },
  {
    "type": "and",
    "named": false
  },
  {
    "type": "as",
    "named": false
  },
  {
    "type": "assert",
    "named": false
  },
  {
    "type": "atomic",
    "named": false
  },
  {
    "type": "base",
    "named": false
  },
  {
    "type": "begin",
    "named": false
  },
  {
    "type": "break",
    "named": false
  },
  {
    "type": "checked",
    "named": false
  },
  {
    "type": "class",
    "named": false
  },
  {
    "type": "comment",
    "named": true
  },
  {
    "type": "component",
    "named": false
  },
  {
    "type": "const",
    "named": false
  },
  {
    "type": "constraint",
    "named": false
  },
  {
    "type": "constructor",
    "named": false
  },
  {
    "type": "continue",
    "named": false
  },
  {
    "type": "default",
    "named": false
  },
  {
    "type": "delegate",
    "named": false
  },
  {
    "type": "do",
    "named": false
  },
  {
    "type": "done",
    "named": false
  },
  {
    "type": "downcast",
    "named": false
  },
  {
    "type": "downto",
    "named": false
  },
  {
    "type": "eager",
    "named": false
  },
  {
    "type": "elif",
    "named": false
  },
  {
    "type": "else",
    "named": false
  },
  {
    "type": "else_directive",
    "named": true
  },
  {
    "type": "end",
    "named": false
  },
  {
    "type": "endif_directive",
    "named": true
  },
  {
    "type": "exception",
    "named": false
  },
  {
    "type": "extern",
    "named": false
  },
  {
    "type": "false",
    "named": false
  },
  {
    "type": "finally",
    "named": false
  },
  {
    "type": "fixed",
    "named": false
  },
  {
    "type": "for",
    "named": false
  },
  {
    "type": "fori",
    "named": false
  },
  {
    "type": "fun",
    "named": false
  },
  {
    "type": "function",
    "named": false
  },
  {
    "type": "functor",
    "named": false
  },
  {
    "type": "global",
    "named": false
  },
  {
    "type": "if",
    "named": false
  },
  {
    "type": "in",
    "named": false
  },
  {
    "type": "include",
    "named": false
  },
  {
    "type": "inherit",
    "named": false
  },
  {
    "type": "inline",
    "named": false
  },
  {
    "type": "interface",
    "named": false
  },
  {
    "type": "internal",
    "named": false
  },
  {
    "type": "lazy",
    "named": false
  },
  {
    "type": "let",
    "named": false
  },
  {
    "type": "match",
    "named": false
  },
  {
    "type": "measure",
    "named": false
  },
  {
    "type": "member",
    "named": false
  },
  {
    "type": "method",
    "named": false
  },
  {
    "type": "mixin",
    "named": false
  },
  {
    "type": "module",
    "named": false
  },
  {
    "type": "mutable",
    "named": false
  },
  {
    "type": "namespace",
    "named": false
  },
  {
    "type": "new",
    "named": false
  },
  {
    "type": "null",
    "named": false
  },
  {
    "type": "object",
    "named": false
  },
  {
    "type": "of",
    "named": false
  },
  {
    "type": "open",
    "named": false
  },
  {
    "type": "or",
    "named": false
  },
  {
    "type": "override",
    "named": false
  },
  {
    "type": "parallel",
    "named": false
  },
  {
    "type": "params",
    "named": false
  },
  {
    "type": "private",
    "named": false
  },
  {
    "type": "process",
    "named": false
  },
  {
    "type": "protected",
    "named": false
  },
  {
    "type": "public",
    "named": false
  },
  {
    "type": "pure",
    "named": false
  },
  {
    "type": "rec",
    "named": false
  },
  {
    "type": "recursive",
    "named": false
  },
  {
    "type": "return",
    "named": false
  },
  {
    "type": "sealed",
    "named": false
  },
  {
    "type": "sig",
    "named": false
  },
  {
    "type": "static",
    "named": false
  },
  {
    "type": "struct",
    "named": false
  },
  {
    "type": "tailcall",
    "named": false
  },
  {
    "type": "then",
    "named": false
  },
  {
    "type": "to",
    "named": false
  },
  {
    "type": "trait",
    "named": false
  },
  {
    "type": "true",
    "named": false
  },
  {
    "type": "try",
    "named": false
  },
  {
    "type": "type",
    "named": false
  },
  {
    "type": "upcast",
    "named": false
  },
  {
    "type": "use",
    "named": false
  },
  {
    "type": "val",
    "named": false
  },
  {
    "type": "virtual",
    "named": false
  },
  {
    "type": "void",
    "named": false
  },
  {
    "type": "volatile",
    "named": false
  },
  {
    "type": "when",
    "named": false
  },
  {
    "type": "while",
    "named": false
  },
  {
    "type": "with",
    "named": false
  },
  {
    "type": "yield",
    "named": false
  },
  {
    "type": "||",
    "named": false
  }
]